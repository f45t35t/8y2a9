import requests

def get_fitch_ratings(isin):
    data = {"operationName":"Search","variables":{"item":"CUSIPISIN","term":isin,"filter":{},"sort":"","dateRange":"","offset":0,"limit":24},"query":"query Search($item: SearchItem, $term: String!, $filter: SearchFilterInput, $sort: String, $dateRange: String, $offset: Int, $limit: Int) {\n  search(item: $item, term: $term, filter: $filter, sort: $sort, dateRange: $dateRange, offset: $offset, limit: $limit) {\n    totalResearchHits\n    totalRacsHits\n    totalEntityHits\n    totalIssueHits\n    totalVideoHits\n    totalEventHits\n    totalAudioHits\n    totalPageHits\n    totalHits\n    research {\n      docType\n      marketing {\n        contentAccessType {\n          name\n          slug\n          __typename\n        }\n        language {\n          name\n          slug\n          __typename\n        }\n        analysts {\n          firstName\n          lastName\n          role\n          sequenceNumber\n          type\n          __typename\n        }\n        countries {\n          name\n          slug\n          __typename\n        }\n        sectors {\n          name\n          slug\n          __typename\n        }\n        __typename\n      }\n      title\n      permalink\n      abstract\n      reportType\n      publishedDate\n      __typename\n    }\n    racs {\n      docType\n      marketing {\n        contentAccessType {\n          name\n          slug\n          __typename\n        }\n        language {\n          name\n          slug\n          __typename\n        }\n        analysts {\n          firstName\n          lastName\n          role\n          sequenceNumber\n          type\n          __typename\n        }\n        countries {\n          name\n          slug\n          __typename\n        }\n        sectors {\n          name\n          slug\n          __typename\n        }\n        __typename\n      }\n      title\n      permalink\n      abstract\n      reportType\n      publishedDate\n      __typename\n    }\n    entity {\n      marketing {\n        analysts {\n          firstName\n          lastName\n          role\n          sequenceNumber\n          type\n          __typename\n        }\n        countries {\n          name\n          slug\n          __typename\n        }\n        sectors {\n          name\n          slug\n          __typename\n        }\n        __typename\n      }\n      name\n      ultimateParent\n      ratings {\n        orangeDisplay\n        ratingCode\n        ratingAlertCode\n        ratingActionDescription\n        ratingAlertDescription\n        ratingTypeDescription\n        ratingEffectiveDate\n        __typename\n      }\n      permalink\n      __typename\n    }\n    issue {\n      permalink\n      issue\n      issueName\n      issuer\n      entityName\n      debtLevel\n      deal\n      className\n      subClass\n      transaction {\n        description\n        id\n        securityList {\n          typeDescription\n          __typename\n        }\n        __typename\n      }\n      ratingDate\n      maturityDate\n      cusip\n      isin\n      originalAmount\n      currency\n      couponRate\n      subgroupName\n      ratableTypeDescription\n      commercialPaperType\n      marketing {\n        analysts {\n          firstName\n          lastName\n          type\n          sequenceNumber\n          __typename\n        }\n        countries {\n          name\n          slug\n          __typename\n        }\n        sectors {\n          name\n          slug\n          __typename\n        }\n        __typename\n      }\n      ratings {\n        orangeDisplay\n        ratableName\n        ratingActionDescription\n        ratingAlertCode\n        ratingAlertDescription\n        ratingCode\n        ratingEffectiveDate\n        ratingLocalActionDescription\n        ratingLocalValue\n        ratingTypeDescription\n        ratingTypeId\n        recoveryEstimate\n        recoveryRatingValue\n        solicitFlag\n        sortOrder\n        filterRatingType\n        filterNationalRatingType\n        filterInvestmentGradeType\n        __typename\n      }\n      __typename\n    }\n    page {\n      title\n      slug\n      image {\n        poster\n        thumbnail\n        __typename\n      }\n      __typename\n    }\n    totalHits\n    __typename\n  }\n}\n"}

    r = requests.post("https://api.fitchratings.com", json = data, headers = {"Origin": "https://www.fitchratings.com",
                                                                              "Host": "api.fitchratings.com"})

    try:
        ratingCode = r.json()["data"]["search"]["issue"][0]["ratings"][0]["ratingCode"]
        ratingActionDescription = r.json()["data"]["search"]["issue"][0]["ratings"][0]["ratingActionDescription"]
        ratingEffectiveDate = r.json()["data"]["search"]["issue"][0]["ratings"][0]["ratingEffectiveDate"]
        return [ratingCode, ratingActionDescription, ratingEffectiveDate]
    except:
        return "No fitch ratings available."

def get_moodys_ratings(isin):
    return 0
    # Need cookies

print(get_fitch_ratings("US1248EPBE24"))